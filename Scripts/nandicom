#!/bin/bash -eu
USAGE="Usage: $0 [options] input_directory [more_input_directories]

Converts an entire GE DICOM dataset.
Output is Nifti by default.
Output directories will be created in current directory by default.

Options (must go first):
    -e EXT : Use a different extension, e.g. .nrrd
    -o DIR : Write output directories to this directory
    -q Q   : Submit to SGE queue Q
    -s SER : Only convert specified series
    -v     : Enable verbose mode
"

EXT="-e .nii.gz"
QUEUE=""
SERIES=""
OUT_DIR="$PWD"
VERBOSE=""
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
while getopts "e:o:q:s:vz" opt; do
    case $opt in
        e) EXT="-e $OPTARG";;
        o) OUT_DIR="$OPTARG";;
        q) QUEUE="$OPTARG";;
        s) SERIES="$OPTARG";;
        v) VERBOSE="-v";;
    esac
done

shift  $((OPTIND - 1))
if [ -z "${1-}" ]; then
    printf "$USAGE"
    exit 1
fi

function convert() {
    if [[ -z "$QUEUE" ]]; then
        STEM=$( basename "$1" .tar.bz2 )
        echo "Converting $STEM"
        cp "$SRC_DIR/$STEM.tar.bz2" "$STEM.tar.bz2"
        bunzip2 --force "$STEM.tar.bz2"
        tar -xf "$STEM.tar"
        DICOMDIR="${STEM##*.}"
        nanconvert_dicom "$DICOMDIR" $EXT $VERBOSE
        rm -r "$DICOMDIR" "$STEM.tar"
    else
        echo "$1" >> $INDEX_FILE
    fi
}


# Loop over input directories
while test ${#} -gt 0; do
    SRC_DIR="$( cd $1 && pwd)"
    BASE_DIR="$( basename $SRC_DIR )"
    TGT_DIR="$OUT_DIR/$BASE_DIR"
    mkdir -p "$TGT_DIR"
    cd "$TGT_DIR"
    echo "Converting study $BASE_DIR"

    if [[ -n "$QUEUE" ]]; then
        SGE_DIR="$PWD/.sge"
        mkdir -p "$SGE_DIR"
        INDEX_FILE="$SGE_DIR/index"
        > $INDEX_FILE
    fi

    if [ -z "${SERIES}" ]; then
        IMGS=$( ls -1 "${SRC_DIR}"/*.????.tar.bz2 | sort -n )
        echo "Found" $( wc -w <<< $IMGS ) "images to convert"
        for IMG in $IMGS; do
            convert $IMG 
        done
    else
        for S in $SERIES; do
            IMG=$( ls -1 "${SRC_DIR}"/${BASE_DIR}.${S}.tar.bz2 )
            convert $IMG
        done
    fi

    if [[ -n "$QUEUE" ]]; then
        COUNT="$( wc -l < $INDEX_FILE )"
        if [[ "$COUNT" -gt 0 ]]; then
            qsub -t 1:$COUNT -o "${SGE_DIR}/" -e "${SGE_DIR}/" -j y -q $QUEUE $SCRIPT_DIR/nandicom_sge.qsub "$INDEX_FILE $SRC_DIR $EXT $VERBOSE"
        else
            echo "No files to convert in index file, not submitting a job"
        fi
    fi

    cd "$OUT_DIR"
    shift # Get next input directory
done
